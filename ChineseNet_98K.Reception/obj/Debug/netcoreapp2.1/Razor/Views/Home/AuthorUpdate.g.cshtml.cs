#pragma checksum "F:\14.大实训\98K小说阅读网\98k1.1\ChineseNet_98K_.NetCore\ChineseNet_98K.Reception\Views\Home\AuthorUpdate.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b9dc3f26c578bf8c3ca22c4295df29e451743d28"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_AuthorUpdate), @"mvc.1.0.view", @"/Views/Home/AuthorUpdate.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/AuthorUpdate.cshtml", typeof(AspNetCore.Views_Home_AuthorUpdate))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b9dc3f26c578bf8c3ca22c4295df29e451743d28", @"/Views/Home/AuthorUpdate.cshtml")]
    public class Views_Home_AuthorUpdate : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<ChineseNet_98K.Entity.Authors>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/author.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/login.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/jquery-3.1.1.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/js/tongji.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/js/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Content/js/es5.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 2 "F:\14.大实训\98K小说阅读网\98k1.1\ChineseNet_98K_.NetCore\ChineseNet_98K.Reception\Views\Home\AuthorUpdate.cshtml"
  
    Layout = null;

#line default
#line hidden
            BeginContext(67, 29, true);
            WriteLiteral("\r\n<!DOCTYPE html>\r\n\r\n<html>\r\n");
            EndContext();
            BeginContext(96, 3086, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4173a7dd30794ca1aabf0a4c7f772284", async() => {
                BeginContext(102, 98, true);
                WriteLiteral("\r\n    <meta name=\"viewport\" content=\"width=device-width\" />\r\n    <title>AuthorUpdate</title>\r\n    ");
                EndContext();
                BeginContext(200, 49, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "1c14839a0ac148d7943668312e7e229e", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(249, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(255, 48, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "2a9d0fe3f7014dda8f86f1348cb6d465", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(303, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(309, 41, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e5f7b1371552485599e3a993a590b2d8", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(350, 999, true);
                WriteLiteral(@"
    <style>
        .reg_iptline checkdata {
            width: 500px;
            height: 500px;
        }
    </style>
    <script>
        $(function () {

            show();
             //上传图片
             $(""#sq"").change(function () {
                 var formData = new FormData($(""#form1"")[0]);
                 $.ajax({
                     url: ""/AuthorLR/UploadFiles"",
                     data: formData,
                     contentType: false,
                     processData: false,
                     cache: false,
                     type: 'post',
                     success: function (d) {
                         console.log(d);
                         $(""#showImg"").prop(""src"", d);
                         $(""[name=IdCardPath]"").val(d);
                     }
                 })
             });
         })

         function show() {
             //反填作者信息
             $.ajax({
                 url: ""/AuthorLR/GetAuthorByid?Id="" + ");
                EndContext();
                BeginContext(1350, 16, false);
#line 48 "F:\14.大实训\98K小说阅读网\98k1.1\ChineseNet_98K_.NetCore\ChineseNet_98K.Reception\Views\Home\AuthorUpdate.cshtml"
                                                 Write(ViewBag.AuthorId);

#line default
#line hidden
                EndContext();
                BeginContext(1366, 1809, true);
                WriteLiteral(@",
                 type: ""post"",
                 async: false,
                 dataType: ""json"",
                 success: function (d) {
                     console.log(d);
                     $(""[name=AuthorId]"").val(d.AuthorId);
                     $(""[name=UserId]"").val(d.UserId);
                     $(""[name=Name]"").val(d.Name);
                     $(""#showImg"").prop(""src"", d.IdCardPath);
                     $(""[name=Pseudonym]"").val(d.Pseudonym);
                     $(""[name=Phone]"").val(d.Phone);
                     $(""[name=Email]"").val(d.Email);
                     $(""[name=QQ]"").val(d.QQ);
                     $(""[name=IdCard]"").val(d.IdCard);
                     $(""[name=Address]"").val(d.Address);
                     $(""[name=Postcode]"").val(d.Postcode);
                     $(""[name=AuthorDesc]"").val(d.AuthorDesc);
                     $(""[name=Password]"").val(d.Password);
                     $(""[name=IsContract]"").val(d.IsContract);
                     $(""[name=");
                WriteLiteral(@"CreateDate]"").val(d.CreateDate);
                     $(""[name=State]"").val(d.State);
                 }
             })
         }
         function UpdateA() {
             $.ajax({
                 url: ""/AuthorLR/Update"",
                 type: ""post"",
                 data: $(""#form1"").serialize(),
                 success: function (data) {
                     console.log(data);
                     if (data) {
                         alert(""修改成功"");
                         location.href = ""/Home/AuthorIndex"";
                     }
                     else {
                         alert(""修改失败"");
                         location.href = ""/Home/AuthorUpdate"";
                     }
                 }
             })
         }
    </script>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3182, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(3184, 12272, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d5347328e6da4022b357d6b656e11c3f", async() => {
                BeginContext(3190, 2527, true);
                WriteLiteral(@"
    <div class=""reg_map"">
        <div class=""au_nav"">
            <div class=""au_box"" id=""loginSign"">
                <div class=""au_nav_a"">
                    <a href=""/Home/Index"" target=""_blank"">98k首页</a>|
                    <a href=""#"" target=""_blank"">编辑介绍</a>|
                    <a href=""#"" target=""_blank"" class=""goodluck"">作者福利</a>|
                    <span>费大晨</span>|
                    <a href=""http://author.98k.com/loginout"">退出</a>

                </div>
                <a href=""http://author.98k.com/"" class=""au_logo""></a>
                <style>
                    .header_link {
                        font-size: 16px;
                        margin-top: 30px;
                        margin-left: 30px;
                        background-image: url(http://static.98k.com/author/v2015/images/toplink.gif);
                        background-position: right 2px;
                        background-repeat: no-repeat;
                        padding-right: 20px;
               ");
                WriteLiteral(@"         float: left;
                    }

                        .header_link a {
                            color: #e74c3c;
                        }
                </style><div class=""header_link""><a target=""_blank"" href=""http://author.98k.com/home""></a></div>

            </div>
        </div>
    </div>
    <div class=""cl20""></div>
    <div class=""reg_wrap"">
        <div class=""reg_cbox"">
            <div class=""reg_tab"">
                <div class=""botline""></div>
                <span class=""active"">修改资料</span> <a href=""/Home/AuthorUptPwd"">修改密码</a>
                <a href=""http://author.98k.com/"" style=""float:right; font-size:14px; color:#1abc9c; letter-spacing:1px;font-family:&#39;Microsoft YaHei&#39;;line-height:40px;"">返回<em style=""letter-spacing:-2px; padding-left:2px;"">&gt;&gt;</em></a>
            </div>
            <div class=""regform_wrap"">
                <div class=""regway regway_phone"">
                    <form action="""" method=""post"" id=""form1"" enctype=""multipart/f");
                WriteLiteral(@"orm-data"">
                        <input type=""hidden"" name=""AuthorId"" placeholder="""">
                        <input type=""hidden"" name=""IsContract"" placeholder="""">
                        <input type=""hidden"" name=""UserId"" placeholder="""">
                        <input type=""hidden"" name=""Password"" placeholder="""">
                        <input type=""hidden"" name=""State"" placeholder="""">
                        <input type=""hidden"" name=""CreateDate"" placeholder="""">
");
                EndContext();
                BeginContext(5753, 896, true);
                WriteLiteral(@"                        <div class=""reg_iptline checkdata"" data-box=""Name"" title=""真实姓名"">
                            <div class=""ipt_tit"">
                                <span class=""must"">*</span> 真实姓名
                            </div>
                            <div class=""ipt_r"">
                                <div class=""ipt_box"">
                                    <input type=""text"" name=""AuthorId"" hidden=""hidden"" />
                                    <input data-bustype=""him"" type=""text"" name=""Name"" placeholder=""请输入真实姓名"">
                                </div>
                                <div class=""iright""></div>
                                <div class=""cl""></div>
                                <div class=""jerror"" name=""Name""></div>
                            </div>
                            <div class=""cl""></div>
                        </div>
");
                EndContext();
                BeginContext(6687, 989, true);
                WriteLiteral(@"                        <div class=""reg_iptline checkdata"" data-box=""IdCardPath"" title=""上传身份复印件"">
                            <div class=""ipt_tit"">
                                <span class=""must"">*</span> 上传身份复印件
                            </div>
                            <div class=""ipt_r"" style=""height:150px;width:150px"">
                                <div class=""ipt_box"">
                                    <input id=""sq"" type=""file"" name=""file"" />
                                    <input type=""hidden"" name=""IdCardPath"" />
                                    <img id=""showImg"" width=""100"" height=""100"" />

                                </div>
                                <div class=""iright""></div>
                                <div class=""cl""></div>
                                <div class=""jerror"" name=""IdCardPath""></div>
                            </div>
                            <div class=""cl""></div>
                        </div>
");
                EndContext();
                BeginContext(7710, 814, true);
                WriteLiteral(@"                        <div class=""reg_iptline checkdata"" data-box=""Pseudonym"" title=""笔名"">
                            <div class=""ipt_tit"">
                                <span class=""must"">*</span> 笔名
                            </div>
                            <div class=""ipt_r"">
                                <div class=""ipt_box"">
                                    <input data-bustype=""him"" type=""text"" name=""Pseudonym"" placeholder=""请输入笔名"">
                                </div>
                                <div class=""iright""></div>
                                <div class=""cl""></div>
                                <div class=""jerror"" name=""Pseudonym""></div>
                            </div>
                            <div class=""cl""></div>
                        </div>
");
                EndContext();
                BeginContext(8559, 805, true);
                WriteLiteral(@"                        <div class=""reg_iptline checkdata"" data-box=""Phone"" title=""手机号"">
                            <div class=""ipt_tit"">
                                <span class=""must"">*</span> 手机号
                            </div>
                            <div class=""ipt_r"">
                                <div class=""ipt_box"">
                                    <input data-bustype=""him"" type=""text"" name=""Phone"" placeholder=""请输入手机号"">
                                </div>
                                <div class=""iright""></div>
                                <div class=""cl""></div>
                                <div class=""jerror"" name=""Phone""></div>
                            </div>
                            <div class=""cl""></div>
                        </div>
");
                EndContext();
                BeginContext(9398, 802, true);
                WriteLiteral(@"                        <div class=""reg_iptline checkdata"" data-box=""Email"" title=""邮箱"">
                            <div class=""ipt_tit"">
                                <span class=""must"">*</span> 邮箱
                            </div>
                            <div class=""ipt_r"">
                                <div class=""ipt_box"">
                                    <input data-bustype=""him"" type=""text"" name=""Email"" placeholder=""请输入邮箱"">
                                </div>
                                <div class=""iright""></div>
                                <div class=""cl""></div>
                                <div class=""jerror"" name=""Email""></div>
                            </div>
                            <div class=""cl""></div>
                        </div>
");
                EndContext();
                BeginContext(10234, 842, true);
                WriteLiteral(@"                        <div class=""reg_iptline checkdata"" data-box=""QQ"" title=""QQ"">
                            <div class=""ipt_tit"">
                                <span class=""must"">*</span> QQ
                            </div>
                            <div class=""ipt_r"">
                                <div class=""ipt_box"">
                                    <input type=""text"" name=""QQ"" placeholder=""请输入QQ号"">
                                </div>
                                <div class=""iright""></div>
                                <div class=""cl""></div>
                                <div class=""jerror"" name=""QQ""></div>

                                <div class=""itip"">5~12位数字</div>
                            </div>
                            <div class=""cl""></div>
                        </div>
");
                EndContext();
                BeginContext(11110, 858, true);
                WriteLiteral(@"                        <div class=""reg_iptline checkdata"" data-box=""IdCard"" title=""身份证号"">
                            <div class=""ipt_tit"">
                                <span class=""must"">*</span> 身份证号
                            </div>
                            <div class=""ipt_r"">
                                <div class=""ipt_box"">
                                    <input type=""text"" name=""IdCard"" placeholder=""请输入身份证"">
                                </div>
                                <div class=""iright""></div>
                                <div class=""cl""></div>
                                <div class=""jerror"" name=""IdCard""></div>

                                <div class=""itip"">5~12位数字</div>
                            </div>
                            <div class=""cl""></div>
                        </div>
");
                EndContext();
                BeginContext(12004, 774, true);
                WriteLiteral(@"                        <div class=""reg_iptline"" data-box=""Address"" data-rqd=""false"" title=""联系地址"">
                            <div class=""ipt_tit"">联系地址</div>
                            <div class=""ipt_r"">
                                <div class=""ipt_box"">
                                    <input type=""text"" name=""Address"" placeholder=""联系地址"">
                                </div>
                                <div class=""iright""></div>
                                <div class=""cl""></div>
                                <div class=""jerror"" name=""Address""></div>

                                <div class=""itip"">1-50个字符</div>
                            </div>
                            <div class=""cl""></div>
                        </div>
");
                EndContext();
                BeginContext(12812, 786, true);
                WriteLiteral(@"                        <div class=""reg_iptline checkdata"" data-box=""Postcode"" data-rqd=""false"" title=""邮政编码"">
                            <div class=""ipt_tit"">邮政编码</div>
                            <div class=""ipt_r"">
                                <div class=""ipt_box"">
                                    <input type=""text"" name=""Postcode"" placeholder=""邮政编码"">
                                </div>
                                <div class=""iright""></div>
                                <div class=""cl""></div>
                                <div class=""jerror"" name=""Postcode""></div>

                                <div class=""itip"">6位数字格式</div>
                            </div>
                            <div class=""cl""></div>
                        </div>
");
                EndContext();
                BeginContext(13634, 896, true);
                WriteLiteral(@"                        <div class=""reg_iptline"" data-box=""AuthorDesc"" title=""作者简介"">
                            <div class=""ipt_tit"">作者简介</div>
                            <div class=""ipt_r"">
                                <div class=""fl"">
                                    <textarea type=""text"" name=""AuthorDesc"" placeholder=""写一段话来介绍自己吧"" class=""introself""></textarea>
                                </div>
                                <span class=""inputNum""><span id=""infoLength"">0</span>/100</span>
                                <div class=""iright""></div>
                                <div class=""cl""></div>
                                <div class=""jerror"" name=""AuthorDesc""></div>
                                <div class=""itip"">1-100个字符</div>
                            </div>
                            <div class=""cl""></div>
                        </div>
");
                EndContext();
                BeginContext(14566, 726, true);
                WriteLiteral(@"                        <div class=""reg_iptline"">
                            <div class=""ipt_tit""></div>
                            <div class=""ipt_r"">
                                <input type=""button"" value=""确认提交"" class=""reg_submit"" onclick=""UpdateA()"">
                            </div>
                            <div class=""cl""></div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class=""footer"">
        <div class=""au_box"">
            <p>
                Copyright<em>©</em>2008-2010 www.98k.com All Rights Reserved
            </p>
            <p>版权所有 深圳创业网络文化科技有限公司</p>
        </div>
    </div>
    ");
                EndContext();
                BeginContext(15292, 46, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9165aa2dcb8e4271826a8db975456041", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(15338, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(15344, 50, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b30e42c64f19444b8221fd12aefeff50", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(15394, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(15400, 47, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e2cfba28a8e04f6781d99469a82410b4", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(15447, 2, true);
                WriteLiteral("\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(15456, 11, true);
            WriteLiteral("\r\n</html>\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<ChineseNet_98K.Entity.Authors> Html { get; private set; }
    }
}
#pragma warning restore 1591
