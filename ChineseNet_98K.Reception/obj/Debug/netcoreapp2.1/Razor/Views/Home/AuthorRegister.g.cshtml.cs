#pragma checksum "F:\14.大实训\98K小说阅读网\98k1.1\ChineseNet_98K_.NetCore\ChineseNet_98K.Reception\Views\Home\AuthorRegister.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "c2b1f369aa2ec390449da806649aa3a94bb157ed"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_AuthorRegister), @"mvc.1.0.view", @"/Views/Home/AuthorRegister.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/AuthorRegister.cshtml", typeof(AspNetCore.Views_Home_AuthorRegister))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c2b1f369aa2ec390449da806649aa3a94bb157ed", @"/Views/Home/AuthorRegister.cshtml")]
    public class Views_Home_AuthorRegister : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/author.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/login.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/jquery-3.1.1.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "F:\14.大实训\98K小说阅读网\98k1.1\ChineseNet_98K_.NetCore\ChineseNet_98K.Reception\Views\Home\AuthorRegister.cshtml"
  
    Layout = null;

#line default
#line hidden
            BeginContext(27, 27, true);
            WriteLiteral("<!DOCTYPE html>\r\n\r\n<html>\r\n");
            EndContext();
            BeginContext(54, 263, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "43598316914740d3a29050c403b22b97", async() => {
                BeginContext(60, 145, true);
                WriteLiteral("\r\n    <meta name=\"viewport\" content=\"width=device-width\" />\r\n    <title>AuthorRegister</title>\r\n    <meta name=\"renderer\" content=\"webkit\">\r\n    ");
                EndContext();
                BeginContext(205, 49, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "8fd0af7acefe45e487cba2249c1afb9b", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(254, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(260, 48, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "93388b8decdf49848d70362ff2a727f1", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(308, 2, true);
                WriteLiteral("\r\n");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(317, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(319, 13926, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "32e816091ca0413c9dd5028ba558e9c2", async() => {
                BeginContext(325, 2002, true);
                WriteLiteral(@"
    <div class=""reg_map"">
        <div class=""au_nav"">
            <div class=""au_box"" id=""loginSign"">
                <div class=""au_nav_a"">
                    <a href=""/Home/Index"" target=""_blank"">98k首页</a>|
                    <a href=""http://author.98k.com/nzh/editors"" target=""_blank"">编辑介绍</a>|
                    <a href=""http://www.98k.com/company/author.html"" target=""_blank"" class=""goodluck"">作者福利</a>|
                    <span id=""name""></span>|
                    <a href=""javascript:location.href=&#39;http://passport.98k.com/logout.do?callback=&#39;+encodeURIComponent(&#39;http://author.98k.com&#39;)+&#39;&amp;rnd=&#39;+new Date().getTime()"">退出</a>
                    <script>
                        var logtype = ""true"";
                        window.zhname = ""智障小黑妹"";
                    </script>
                </div>
                <a href=""http://author.98k.com"" class=""au_logo""></a>
            </div>
        </div>
    </div>
    <div class=""cl20""></div>
    <div class=""");
                WriteLiteral(@"reg_wrap"">
        <div class=""stepline"">
            <div class=""overbox"">
                <span class=""step"" style=""text-indent:15px"">注册通行证</span>
                <span class=""step"">接受协议</span>
                <span class=""step active"" style=""margin-left:-4px"">填写资料</span>
                <span class=""step"" style=""text-indent:-25px"">注册成功</span>
            </div>
        </div>
        <div class=""reg_cbox"">
            <div class=""reg_tab"">
                <div class=""botline""></div>
                <span id=""pRegister"" class=""active"" data-regway=""regway_phone"">手机号注册</span>
                <span id=""eRgister"" data-regway=""regway_mail"">邮箱注册</span>
                <a href=""http://author.98k.com/nau/register"" style=""float:right; font-size:14px; color:#1abc9c; letter-spacing:1px;font-family:"" Microsoft YaHei"";line-height:40px;"">返回<em style=""letter-spacing:-2px; padding-left:2px;"">>></em></a>
            </div>
            <div class=""regform_wrap"">
");
                EndContext();
                BeginContext(2357, 2730, true);
                WriteLiteral(@"                <div class=""regway regway_phone"">
                    <form id=""form0"">
                        <div class=""reg_iptline checkdata"" data-box=""Pseudonym"" title=""笔名"">
                            <div class=""ipt_tit"">
                                <span class=""must"">*</span> 笔名
                            </div>
                            <div class=""ipt_r"">
                                <div class=""ipt_box"">
                                    <input data-bustype=""rm"" type=""text"" name=""Pseudonym"" placeholder=""请输入笔名"" value="""">
                                </div>
                                <div class=""iright""></div>
                                <div class=""cl""></div>
                                <div class=""jerror"" name=""Pseudonym""></div>
                                <div class=""itip"">*不可是数字和特殊字符，只可以是汉字</div>
                            </div>
                            <div class=""cl""></div>
                        </div>
                        <div class=""");
                WriteLiteral(@"reg_iptline checkdata"" data-box=""QQ"" title=""QQ"">
                            <div class=""ipt_tit"">
                                <span class=""must"">*</span> QQ
                            </div>
                            <div class=""ipt_r"">
                                <div class=""ipt_box"">
                                    <input type=""text"" name=""QQ"" placeholder=""请输入QQ号"" value="""">
                                </div>
                                <div class=""iright""></div>
                                <div class=""cl""></div>
                                <div class=""jerror"" name=""QQ""></div>
                                <div class=""itip"">5~12位数字</div>
                            </div>
                            <div class=""cl""></div>
                        </div>
                        <div class=""reg_iptline checkdata"" data-box=""Phone"" title=""手机号"">
                            <div class=""ipt_tit"">
                                <span class=""must"">*</span> 手机号
     ");
                WriteLiteral(@"                       </div>
                            <div class=""ipt_r"">
                                <div class=""ipt_box"">
                                    <input type=""text"" id=""cellnumber"" name=""Phone"" placeholder=""请输入手机号"" value="""">
                                </div>
                                <div class=""iright""></div>
                                <div class=""cl""></div>
                                <div class=""jerror"" name=""Phone"" data-errcode=""106""></div>
                                <div class=""itip"">11位数字</div>
                            </div>
                            <div class=""cl""></div>
                        </div>
");
                EndContext();
                BeginContext(6176, 2347, true);
                WriteLiteral(@"                        <div class=""reg_iptline checkdata"" data-box=""Password"" title=""密码"">
                            <div class=""ipt_tit"">
                                <span class=""must"">*</span> 作者专区登录密码
                            </div>
                            <div class=""ipt_r"">
                                <div class=""ipt_box"">
                                    <input type=""Password"" name=""Password"" placeholder=""请输入密码"" value="""">
                                </div>
                                <div class=""iright""></div>
                                <div class=""cl""></div>
                                <div class=""jerror"" name=""Password"" data-errcode=""106""></div>
                                <div class=""itip"">6~16位英文字母(区分大小写)或数字，数字字母需同时出现</div>
                            </div>
                            <div class=""cl""></div>
                        </div>
                        <div class=""reg_iptline checkdata"" data-box=""rePwd"" title=""确认密码"">
                ");
                WriteLiteral(@"            <div class=""ipt_tit"">
                                <span class=""must"">*</span> 再次确认密码
                            </div>
                            <div class=""ipt_r"">
                                <div class=""ipt_box"">
                                    <input type=""password"" name=""rePwd"" placeholder=""请再次输入密码"" value="""">
                                </div>
                                <div class=""iright""></div>
                                <div class=""cl""></div>
                                <div class=""jerror"" name=""rePwd"" data-errcode=""106""></div>
                                <div class=""itip"">6~16位英文字母(区分大小写)或数字，数字字母需同时出现</div>
                            </div>
                            <div class=""cl""></div>
                        </div>
                        <div class=""reg_iptline"">
                            <div class=""ipt_tit""></div>
                            <div class=""ipt_r"">
                                <input type=""hidden"" name=""UserI");
                WriteLiteral(@"d"" value="""">
                                <input type=""button"" name="""" value=""确认提交"" class=""reg_submit"" onclick=""addA()"">
                            </div>
                            <div class=""cl""></div>
                        </div>
                    </form>
                </div>
");
                EndContext();
                BeginContext(8553, 5685, true);
                WriteLiteral(@"                <div class=""regway regway_mail"" style=""display:none"">
                    <form action=""/"" method=""post"" id=""form_ereg"">
                        <input type=""hidden"" name=""UserId"" />
                        <div class=""reg_iptline checkdata"" data-box=""pseudonym"" title=""笔名"">
                            <div class=""ipt_tit""><span class=""must"">*</span> 笔名</div>
                            <div class=""ipt_r"">
                                <div class=""ipt_box""><input data-bustype=""re"" type=""text"" name=""Pseudonym"" placeholder=""请输入笔名"" value=""""></div>
                                <div class=""iright""></div>
                                <div class=""cl""></div>
                                <div class=""jerror"" name=""pseudonym""></div>
                                <div class=""itip"">1-12个字符，汉字、数字、字母开头，可包含下划线</div>
                            </div>
                            <div class=""cl""></div>
                        </div>
                        <div class=""reg_iptline check");
                WriteLiteral(@"data"" data-box=""qq"" title=""QQ"">
                            <div class=""ipt_tit""><span class=""must"">*</span> QQ</div>
                            <div class=""ipt_r"">
                                <div class=""ipt_box""><input type=""text"" name=""QQ"" placeholder=""请输入QQ号"" value=""""></div>
                                <div class=""iright""></div>
                                <div class=""cl""></div>
                                <div class=""jerror"" name=""qq""></div>
                                <div class=""itip"">5~12位数字</div>
                            </div>
                            <div class=""cl""></div>
                        </div>
                        <div class=""reg_iptline checkdata"" data-box=""email"" title=""邮箱地址"">
                            <div class=""ipt_tit""><span class=""must"">*</span> 邮箱</div>
                            <div class=""ipt_r"">
                                <div class=""ipt_box""><input type=""text"" id=""mailaddress"" name=""Email"" placeholder=""请输入邮箱地址"" value=""""></di");
                WriteLiteral(@"v>
                                <div class=""iright""></div>
                                <div class=""cl""></div>
                                <div class=""jerror"" name=""email"" data-errcode=""107""></div>
                                <div class=""itip"">QQ邮箱</div>
                            </div>
                            <div class=""cl""></div>
                        </div>
                        <div class=""reg_iptline checkdata"" data-box=""dyCode"" title=""验证码"">
                            <div class=""ipt_tit""><span class=""must"">*</span> 验证码</div>
                            <div class=""ipt_r"">
                                <div class=""ipt_box shortbox fl"" style=""margin-right:5px""><input name=""Yzm"" id=""smscode"" type=""text"" placeholder=""验证码"" value=""""></div>
                                <div class=""ipt_btn fl"" id=""mailtimerbtn""><input type=""button"" data-hook=""getmailcode"" data-bustype=""re"" onclick=""sendYzm()"" value=""发送验证码""></div>
                                <div class=""ipt_btn fl""");
                WriteLiteral(@" id=""mailtimerbox""></div>
                                <div class=""iright""></div>
                                <div class=""cl""></div>
                                <div class=""jerror"" name=""Yzm"" data-hook=""mail_sendcodeerr""></div>
                                <div class=""itip"">超过60秒，请重新输入验证码</div>
                            </div>
                            <div class=""cl""></div>
                        </div>
                        <div class=""reg_iptline checkdata"" data-box=""pwd"" title=""密码"">
                            <div class=""ipt_tit""><span class=""must"">*</span> 作者专区登录密码</div>
                            <div class=""ipt_r"">
                                <div class=""ipt_box""><input type=""password"" name=""Password"" placeholder=""请输入密码"" value=""""></div>
                                <div class=""iright""></div>
                                <div class=""cl""></div>
                                <div class=""jerror"" name=""pwd""></div>
                                <div class=""");
                WriteLiteral(@"itip"">6~16位英文字母(区分大小写)或数字，数字字母需同时出现</div>
                            </div>
                            <div class=""cl""></div>
                        </div>
                        <div class=""reg_iptline checkdata"" data-box=""rePwd"" title=""确认密码"">
                            <div class=""ipt_tit""><span class=""must"">*</span> 再次确认密码</div>
                            <div class=""ipt_r"">
                                <div class=""ipt_box""><input type=""password"" name=""Password0"" placeholder=""请再次输入密码"" value=""""></div>
                                <div class=""iright""></div>
                                <div class=""cl""></div>
                                <div class=""jerror"" name=""rePwd""></div>
                                <div class=""itip"">6~16位英文字母(区分大小写)或数字，数字字母需同时出现</div>
                            </div>
                            <div class=""cl""></div>
                        </div>
                        <div class=""reg_iptline"">
                            <div class=""ipt_tit""></");
                WriteLiteral(@"div>
                            <div class=""ipt_r""><input type=""button"" onclick=""addAuthorByEmail()"" value=""确认提交"" class=""reg_submit""></div>
                            <div class=""cl""></div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class=""footer"">
        <div class=""au_box"">
            <p>
                Copyright<em>©</em>2008-2010 www.98k.com All Rights Reserved
            </p>
            <p>版权所有 深圳创业网络文化科技有限公司</p>
        </div>
    </div>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(14245, 11, true);
            WriteLiteral("\r\n</html>\r\n");
            EndContext();
            BeginContext(14256, 41, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "392cb5411ab44c4da55907fc592c224d", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(14297, 53, true);
            WriteLiteral("\r\n<script>\r\n    $(function () {\r\n        var name = \'");
            EndContext();
            BeginContext(14351, 16, false);
#line 247 "F:\14.大实训\98K小说阅读网\98k1.1\ChineseNet_98K_.NetCore\ChineseNet_98K.Reception\Views\Home\AuthorRegister.cshtml"
               Write(ViewBag.UserName);

#line default
#line hidden
            EndContext();
            BeginContext(14367, 67, true);
            WriteLiteral("\';\r\n        $(\"#name\").html(name);\r\n        $(\"[name=UserId]\").val(");
            EndContext();
            BeginContext(14435, 14, false);
#line 249 "F:\14.大实训\98K小说阅读网\98k1.1\ChineseNet_98K_.NetCore\ChineseNet_98K.Reception\Views\Home\AuthorRegister.cshtml"
                          Write(ViewBag.UserId);

#line default
#line hidden
            EndContext();
            BeginContext(14449, 2809, true);
            WriteLiteral(@");

        $(""[name=Pseudonym]"").blur(function () {
            QueryByPseudonym();
        })
    })

    $(""#eRgister"").click(function () {
        $("".regway_phone"").hide();
        $(""#pRegister"").removeClass(""active"");
        $("".regway_mail"").show();
        $(""#eRgister"").addClass(""active"");
    })

    $(""#pRegister"").click(function () {
        $("".regway_phone"").show();
        $(""#pRegister"").addClass(""active"");
        $("".regway_mail"").hide();
        $(""#eRgister"").removeClass(""active"");
    })

    function addA() {
        var pwd1 = $(""[name=Password]"").val();
        var pwd2 = $(""[name=rePwd]"").val();

        if (pwd1 != pwd2) {
            alert(""两次密码不一致"");
            return;
        }
        else {
            $.ajax({
                url: ""/AuthorLR/AuthorAdd"",
                type: ""post"",
                data: $(""#form0"").serialize(),
                success: function (data) {
                    if (data > 0) {
                        location.");
            WriteLiteral(@"href = ""/Home/AuthorIndex"";
                    }
                    else {
                        alert(""注册失败"");
                    }
                }
            })
        }
    }
    //验证重复笔名
    function QueryByPseudonym() {
        $.ajax({
            url: ""/Email/QueryByPseudonym?Pseudonym="" + $(""[name=Pseudonym]"").val(),
            type: ""post"",
            success: function (data) {
                console.log(data);
                if (data > 0) {
                    alert(""笔名重复,请重新输入"");
                }
                else {

                }
            }
        })
    }

    //发送邮箱验证码
    function sendYzm() {
        $.ajax({
            url: ""/Email/lead?qqEmail="" + $(""[name=Email]"").val(),
            type: ""post"",
            success: function (data) {
                console.log(data);
                if (data) {

                }
                else {

                }
            }
        })
    }
    //邮箱注册
    function addAuthorByEm");
            WriteLiteral(@"ail() {
        var pwd1 = $(""#form_ereg"").children(""[name=Password]"").val();
        var pwd2 = $(""#form_ereg"").children(""[name=Password0]"").val();
        if (pwd1 != pwd2) {
            alert(""两次密码不一致"");
            return;
        }
        $.ajax({
            url: ""/Email/AuthorAdd"",
            type: ""post"",
            data: $(""#form_ereg"").serialize(),
            success: function (data) {
                if (data > 0) {
                    location.href = ""/Home/AuthorIndex"";
                }
                else if (data == -1)
                {
                    alert(""验证码不正确"");
                }
                else {
                    alert(""注册失败"");
                }
            }
        })
    }
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
