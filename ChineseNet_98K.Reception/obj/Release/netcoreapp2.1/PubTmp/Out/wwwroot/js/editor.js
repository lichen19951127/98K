function editorTips(e, t) { clearTimeout(errorTimmer); var a = $("body"); a.find(".autosave").size() > 0 && a.find(".autosave").remove(); var l = ""; l = e > 0 ? '<div class="autosave" style="position:fixed;"><p class="save_succ"><em class="pub_ico ico_succ"></em>' + t + "</p></div>" : '<div class="autosave" style="position:fixed;"><p class="save_error"><em class="pub_ico ico_err"></em>' + t + "</p></div>", a.append(l), errorTimmer = setTimeout(function () { a.find(".autosave").fadeOut() }, 5e3) } var errorTimmer = null; $(function () { function e() { var e = $(window).height(), t = $("body").height(), a = e - 100, l = a - N.find(".side_tit").height(), o = t < e ? e : t; I.height(o), N.height(a), T.css("min-height", a - 65).find(".select1").find(".option").css("max-height", e - 180), g.height(l), x ? (g.find(".tomelist").height(l), g.find(".chapterlist").css("max-height", l - 40)) : (g.find(".tomelist").height(l - 50), g.find(".chapterlist").css("max-height", l - 50 - 40)) } function t() { if ("not" != D.data("movestatus")) { D.data("movestatus", "not"); var e = D.attr("tomeid"), t = D.attr("chapterid"), a = D.find(".voname").attr("tomeid"), l = { bookId: _, sourceTomeId: e, sourceChapterId: t, destTomeId: a }; if (D.find(".mdchapter").is(":visible") && "卷末" != D.find(".chapterps").find(".sel_con").text()) { var o = D.find(".chaptername").find(".sel_con").attr("chapterid"); l.destChapterId = o } $.ajax({ type: "post", url: "/book/chapter/adjust", data: l, dateType: "json", error: function (e) { D.data("movestatus", "can"); editorTips(-1, e.message || "网络异常，请重试") }, success: function (e) { if (D.data("movestatus", "can"), null == e || "" == e) return !1; if (200 == e.code) { var a = g.find(".l_tome[tomeid='" + l.sourceTomeId + "']").find(".chapterlist").scrollTop(); editorTips(1, "恭喜您调序成功！"), s({ tomeId: l.sourceTomeId, scrollTop: a, moveChapterId: t }) } else editorTips(-1, e.message) } }) } } function a(e, t, a) { D.attr({ chapterlevel: e, tomeid: t, chapterid: a }); var o = P.backIndex("tomeId", t) - 1, i = P[o].chapterList.countArry("level", e), r = P.length, d = P.backIndex("level", 3) > 0, s = "<ul>"; if (i < 2) if (1 == e) for (n = r - 1; n > 0; n--) { c = P[n]; if (d) { if (c.tomeId != t && (s += '<li class="l_tome" tomeid="' + c.tomeId + '" tomeno="' + c.tomeNo + '" tomelevel="' + c.level + '">' + c.tomeName + "</li>"), 3 == c.level) break } else { if (1 == c.level) break; c.tomeId != t && (s += '<li class="l_tome" tomeid="' + c.tomeId + '" tomeno="' + c.tomeNo + '" tomelevel="' + c.level + '">' + c.tomeName + "</li>") } } else for (n = 0; n < r; n++) { c = P[n]; if (d) { if (c.tomeId != t && (s += '<li class="l_tome" tomeid="' + c.tomeId + '" tomeno="' + c.tomeNo + '" tomelevel="' + c.level + '">' + c.tomeName + "</li>"), 3 == c.level) break } else { if (2 == c.level) break; c.tomeId != t && (s += '<li class="l_tome" tomeid="' + c.tomeId + '" tomeno="' + c.tomeNo + '" tomelevel="' + c.level + '">' + c.tomeName + "</li>") } } else { if (1 == e) for (n = r - 1; n > 0; n--) { c = P[n]; if (d) { if (s += '<li class="l_tome" tomeid="' + c.tomeId + '" tomeno="' + c.tomeNo + '" tomelevel="' + c.level + '">' + c.tomeName + "</li>", 3 == c.level) break } else { if (1 == c.level) break; s += '<li class="l_tome" tomeid="' + c.tomeId + '" tomeno="' + c.tomeNo + '" tomelevel="' + c.level + '">' + c.tomeName + "</li>" } } else for (var n = 0; n < r; n++) { var c = P[n]; if (d) { if (s += '<li class="l_tome" tomeid="' + c.tomeId + '" tomeno="' + c.tomeNo + '" tomelevel="' + c.level + '">' + c.tomeName + "</li>", 3 == c.level) break } else { if (2 == c.level) break; s += '<li class="l_tome" tomeid="' + c.tomeId + '" tomeno="' + c.tomeNo + '" tomelevel="' + c.level + '">' + c.tomeName + "</li>" } } l(t) } if (s += "</ul>", D.find(".volume").find(".option").empty().html(s), 0 == D.find(".volume").find(".l_tome").length) return publicDialog("章节调序", "该章节不支持调序", 0), !1; if (i < 2) if (r > 1) { var m = D.find(".l_tome").eq(0), e = D.attr("level"); l(t = m.attr("tomeid")) } else publicDialog("章节调序", "该章节不支持调序", 0) } function l(e) { if (null != (h = P.backIndex("tomeId", e)) && "" != h) { h--; var a = D.attr("tomeid") == e, l = D.attr("chapterlevel"); D.find(".chapterps").find(".select_nav").removeClass("not_select").find("em").html("章节之前"); var o = "<ul>", i = P[h], r = i.chapterList; if (D.find(".volume").find(".sel_con").html(i.tomeName).attr({ tomeid: i.tomeId, tomeno: i.tomeNo, tomelevel: i.level }), null == r || "" == r) return D.find(".mdchapter").hide(), publicDialog("移动章节", "移动章节", 2, t), !1; D.find(".mdchapter").show(); var d = r.length, s = !0, n = -2, c = n + 1; if (a) { var m = D.attr("chapterid"); c = (n = r.backIndex("chapterId", m) - 1) + 1 } var p = r.backIndex("level", l) - 1, f = r.countArry("level", l); if (1 == l) if (f > 2) { for (v = p; v < d; v++)if (v != n && v != c) { var h = p; n == p && (h = p + 2), r[v].level == l && (o += '<li class="l_chapter" chapterId="' + r[v].chapterId + '" title="' + r[v].chapterName.replace(/\</g, "&lt;").replace(/\>/g, "&gt") + '" orderNum="' + r[v].orderNum + '" level="' + r[v].level + '">' + r[v].chapterName.replace(/\</g, "&lt;").replace(/\>/g, "&gt") + "</li>"), s && (D.find(".chaptername").find(".sel_con").html(r[h].chapterName.replace(/\</g, "&lt;").replace(/\>/g, "&gt")).attr({ chapterId: r[h].chapterId, orderNum: r[h].orderNum, level: r[h].level }), s = !1) } } else if (n == p) { u = p + 1; if (a) D.find(".chaptername").find(".sel_con").html(r[u].chapterName.replace(/\</g, "&lt;").replace(/\>/g, "&gt")).attr({ chapterId: r[u].chapterId, orderNum: r[u].orderNum, level: r[u].level }), D.find(".chapterps").find(".select_nav").addClass("not_select").find("em").html("卷末"); else if (D.find(".chaptername").find(".sel_con").html(r[0].chapterName.replace(/\</g, "&lt;").replace(/\>/g, "&gt")).attr({ chapterId: r[0].chapterId, orderNum: r[0].orderNum, level: r[0].level }), 2 == f) for (v = p; v < d; v++)r[v].level == l && (o += '<li class="l_chapter" chapterId="' + r[v].chapterId + '" title="' + r[v].chapterName.replace(/\</g, "&lt;").replace(/\>/g, "&gt") + '" orderNum="' + r[v].orderNum + '" level="' + r[v].level + '">' + r[v].chapterName.replace(/\</g, "&lt;").replace(/\>/g, "&gt") + "</li>") } else { u = p; if (a) D.find(".chaptername").find(".sel_con").html(r[u].chapterName.replace(/\</g, "&lt;").replace(/\>/g, "&gt")).attr({ chapterId: r[u].chapterId, orderNum: r[u].orderNum, level: r[u].level }), D.find(".chapterps").find(".select_nav").addClass("not_select").find("em").html("章节之前"); else if (D.find(".chaptername").find(".sel_con").html(r[u].chapterName.replace(/\</g, "&lt;").replace(/\>/g, "&gt")).attr({ chapterId: r[u].chapterId, orderNum: r[u].orderNum, level: r[u].level }), 2 == f) for (v = p; v < d; v++)r[v].level == l && (o += '<li class="l_chapter" chapterId="' + r[v].chapterId + '" title="' + r[v].chapterName.replace(/\</g, "&lt;").replace(/\>/g, "&gt") + '" orderNum="' + r[v].orderNum + '" level="' + r[v].level + '">' + r[v].chapterName.replace(/\</g, "&lt;").replace(/\>/g, "&gt") + "</li>") } else if (f > 2) { for (v = p; v < d; v++)if (v != n && v != c) { u = p; n == p && (u = p + 2), s && (D.find(".chaptername").find(".sel_con").html(r[u].chapterName).attr({ chapterId: r[u].chapterId, orderNum: r[u].orderNum, level: r[u].level }), s = !1), r[v].level == l && (o += '<li class="l_chapter" chapterId="' + r[v].chapterId + '" title="' + r[v].chapterName.replace(/\</g, "&lt;").replace(/\>/g, "&gt") + '" orderNum="' + r[v].orderNum + '" level="' + r[v].level + '">' + r[v].chapterName.replace(/\</g, "&lt;").replace(/\>/g, "&gt") + "</li>") } } else if (n == p) { u = p + 1; D.find(".chaptername").find(".sel_con").html(r[u].chapterName.replace(/\</g, "&lt;").replace(/\>/g, "&gt")).attr({ chapterId: r[u].chapterId, orderNum: r[u].orderNum, level: r[u].level }), D.find(".chapterps").find(".select_nav").addClass("not_select").find("em").html("卷末") } else { var u = p; if (a) D.find(".chaptername").find(".sel_con").html(r[u].chapterName.replace(/\</g, "&lt;").replace(/\>/g, "&gt")).attr({ chapterId: r[u].chapterId, orderNum: r[u].orderNum, level: r[u].level }), D.find(".chapterps").find(".select_nav").addClass("not_select").find("em").html("章节之前"); else if (D.find(".chaptername").find(".sel_con").html(r[0].chapterName.replace(/\</g, "&lt;").replace(/\>/g, "&gt")).attr({ chapterId: r[0].chapterId, orderNum: r[0].orderNum, level: r[0].level }), 2 == f) for (var v = p; v < d; v++)r[v].level == l && (o += '<li class="l_chapter" chapterId="' + r[v].chapterId + '" title="' + r[v].chapterName.replace(/\</g, "&lt;").replace(/\>/g, "&gt") + '" orderNum="' + r[v].orderNum + '" level="' + r[v].level + '">' + r[v].chapterName.replace(/\</g, "&lt;").replace(/\>/g, "&gt") + "</li>") } o += "</ul>", D.find(".chaptername").find(".option").html(o), D.find(".chaptername").find(".option").find("li").length < 2 ? D.find(".chaptername").find(".select_nav").addClass("not_select") : D.find(".chaptername").find(".select_nav").removeClass("not_select"), D.find(".l_chapter").unbind("click").click(function () { var e = $(this); e.parents(".chaptername").find(".sel_con").attr({ chapterid: e.attr("chapterid"), ordernum: e.attr("ordernum"), level: e.attr("level") }), D.find(".chapterps").find(".sel_con").text("章节之前") }), publicDialog("移动章节", "移动章节", 2, t) } } function o() { b.fadeOut(), I.fadeOut() } function i() { var t = (new Date).getTime(); g.empty(); g.html('<div class="loading">拼命加载中...</div>'), $.ajax({ type: "post", url: Y, data: { bookId: _, t: t }, dataType: "json", error: function () { g.html('<div class="errorhtml">请求数据出错，请您刷新重试<br>连续多次依然不成功请联系客服人员</div>') }, success: function (t) { if (g.empty(), null == t || "" == t) return !1; if (200 == t.code) { var a = [], l = t.result; P = t.result; var o = []; if ("" == l) return !1; var i = '<div class="tomelist"><ul>', r = ""; if (x) { for (var c = 0, b = l.length; c < b; c++) { var I = (Y = l[c].chapterList).length, y = l[c].tomeName.replace(/\</g, "&lt;").replace(/\>/g, "&gt"), D = l[c].level; if (o.push(l[c].tomeId), r += '<li tomeId="' + l[c].tomeId + '" tomeNo="' + l[c].tomeNo + '" tomeLevel="' + l[c].level + '"><a href="javascript:;">' + y + "</a></li>", i += 3 == D ? '<li class="l_tome mix_tome" tomeId="' + l[c].tomeId + '" tomeNo="' + l[c].tomeNo + '" tomeLevel="' + D + '">' : '<li class="l_tome" tomeId="' + l[c].tomeId + '" tomeNo="' + l[c].tomeNo + '" tomeLevel="' + D + '">', i += '<p class="art_tit"><em class="l_name" title="' + y + '">' + y + "</em></p>", i += '<div class="chapterlist"><ul class="art_con">', I > 0) for (z = 0; z < I; z++) { R = Y[z].chapterName.replace(/\</g, "&lt;").replace(/\>/g, "&gt"); 1 == Y[z].level ? i += '<li class="l_chapter" chapterId="' + Y[z].chapterId + '" title="' + R.replace(/\</g, "&lt;").replace(/\>/g, "&gt") + '" orderNum="' + Y[z].orderNum + '" level="' + Y[z].level + '"><em class="pub_ico vip"></em><em class="l_name">' + R + "</em></li>" : i += '<li class="l_chapter" chapterId="' + Y[z].chapterId + '" title="' + R + '" orderNum="' + Y[z].orderNum + '" level="' + Y[z].level + '"><em class="l_name">' + R + "</em></li>"; F = { tomeId: l[c].tomeId, chapterId: Y[z].chapterId }; a.push(F) } i += "</ul></div>", i += "</li>" } i += "</ul></div>" } else { for (var c = 0, b = l.length; c < b; c++) { var Y = l[c].chapterList, I = Y.length, y = l[c].tomeName.replace(/\</g, "&lt;").replace(/\>/g, "&gt"), D = l[c].level; if (o.push(l[c].tomeId), r += 2 == D ? '<li tomeId="' + l[c].tomeId + '" tomeNo="' + l[c].tomeNo + '" tomeLevel="' + l[c].level + '"><a href="javascript:;"><em class="pub_ico vip"></em> ' + y + "</a></li>" : '<li tomeId="' + l[c].tomeId + '" tomeNo="' + l[c].tomeNo + '" tomeLevel="' + l[c].level + '"><a href="javascript:;">' + y + "</a></li>", i += 3 == D ? '<li class="l_tome mix_tome" tomeId="' + l[c].tomeId + '" tomeNo="' + l[c].tomeNo + '" tomeLevel="' + D + '">' : '<li class="l_tome" tomeId="' + l[c].tomeId + '" tomeNo="' + l[c].tomeNo + '" tomeLevel="' + D + '">', 100 == l[c].tomeNo ? i += '<p class="art_tit"><em class="l_name" title="' + l[c].tomeName.replace(/\</g, "&lt;").replace(/\>/g, "&gt") + '">' + y + "</em></p>" : 2 == l[c].level ? i += '<p class="art_tit"><em class="l_name" title="' + l[c].tomeName.replace(/\</g, "&lt;").replace(/\>/g, "&gt") + '">' + y + '</em><em class="pub_ico vip"></em><span class="mod_ps"><em title="修改卷名" class="modname pub_ico"></em></span></p>' : i += '<p class="art_tit"><em class="l_name" title="' + l[c].tomeName.replace(/\</g, "&lt;").replace(/\>/g, "&gt") + '">' + y + '</em><span class="mod_ps"><em title="修改卷名" class="modname pub_ico"></em></span></p>', i += '<div class="chapterlist"><ul class="art_con">', I > 0) for (var z = 0; z < I; z++) { var R = Y[z].chapterName.replace(/\</g, "&lt;").replace(/\>/g, "&gt"); 1 == Y[z].level ? i += '<li class="l_chapter" chapterId="' + Y[z].chapterId + '" title="' + R + '" orderNum="' + Y[z].orderNum + '" level="' + Y[z].level + '"><em class="pub_ico vip"></em><em class="l_name">' + R + '</em><div class="mod_ps"><em title="修改章节名" class="modname pub_ico"></em><em class="modrank pub_ico" title="修改顺序"></em></div></li>' : i += '<li class="l_chapter" chapterId="' + Y[z].chapterId + '" title="' + R + '" orderNum="' + Y[z].orderNum + '" level="' + Y[z].level + '"><em class="l_name">' + R + '</em><div class="mod_ps"><em title="修改章节名" class="modname pub_ico"></em><em class="modrank pub_ico" title="修改顺序"></em></div></li>'; var F = { tomeId: l[c].tomeId, chapterId: Y[z].chapterId }; if (a.push(F), c == b - 1 && z == I - 1) { var G = '<div class="w_list"><span class="font_c_gray" style="margin-left:16px;">最新章节：</span>' + R + "</div>"; $(".coding").prepend(G) } } i += '<li class="add_chapter"></li></ul></div>', i += "</li>" } i += '<li class="addli"><div class="add_tome"><input class="au_input addtome" maxlength="20" placeholder="请输入分卷名" type="text"><p class="adderror"><em class="ico_err pub_ico"></em><em class="error_con">错误信息</em></p><div class="btns"><span class="btn_bg btn_sure">保存</span><span class="btn_fg btn_cancel">取消</span></div></div></li>', i += "</ul></div>", i += '<p class="creat_tome"></p>' } if (g.html(i), T.find(".choicetome").html(r), j < 1) if (x) { var H = a.length - 1, J = g.find(".l_tome[tomeId='" + a[H].tomeId + "']"), K = J.find(".l_chapter:last").attr("chapterId"), Q = J.attr("tomeid"); T.data({ tomeid: Q, chapterid: K, draftid: 0 }), m() } else { n(g.find(".l_tome:last").find(".add_chapter")) } else $.ajax({ type: "post", url: "/book/draft/get", data: { bookId: _, draftId: j }, dataType: "json", error: function (e) { location.href = "/book/chapter/show?bookId=" + _ }, success: function (e) { 200 == e.code ? (T.find(".select1").eq(0).show().siblings(".noselect").hide(), B = e.result.level || 0, function (e) { N.find(".a_draft").addClass("hover"), clearInterval(q), q = setInterval(v, L); var t = e.result; if ("" != t && void 0 != t) { var a = t.chapterName.replace(/\</g, "&lt;").replace(/\>/g, "&gt"), l = t.content, o = t.authorWords, i = null != t.tomeName ? t.tomeName.replace(/\</g, "&lt;").replace(/\>/g, "&gt") : "", r = t.summary; if (null != r && E.val(r), x) T.find(".book_tome").html(i), T.find(".book_chapter").html(a), T.find(".book_content").html(l), T.find(".bookend").show().siblings(".coding").hide(), T.show(); else { if (l = l.replace(/<p>/g, ""), l = l.replace(/<\/p>|<br>|<br\/>/g, "\n"), O.val(a), A.val(l), W.val(o), T.find(".noselect").find(".sel_con").html(i), 4 != C && k.find(".label").eq(2).addClass("not-allowed"), null != t.mode && "" != t.mode) { var d = t.mode, s = 0; 1 == d ? (s = 0, T.data({ tomeid: t.tomeId, draftid: t.draftId, submitmode: t.mode, level: t.level, submitmode: 2 })) : 2 == d && (s = 2, T.data({ tomeid: t.tomeId, draftid: t.draftId, submitmode: t.mode, level: t.level, submitmode: 3 })), k.show().find(".label").eq(s).addClass("focus").siblings(".label").removeClass("focus") } u(), T.find(".coding").show().siblings(".bookend").hide(), p(t.tomeId), T.find(".upload_c").attr("submit", "draft"), T.show(); var n = r || ""; $("body").data({ chapter_name: a, chapter_content: l, chapter_say: o, chapter_summary: n, chapter_level: t.level, chapter_mode: 2 }) } } }(e)) : location.href = "/book/chapter/show?bookId=" + _ } }); T.find(".upload_c").click(function () { var e = $(this); if ("loading" == e.data("load")) return editorTips(-1, "您提交的请求太频繁啦！上一次的提交还在请求中..."), !1; !function (e) { function t(e, t) { T.find(".upload_c").data("load", "loading"), $.ajax({ type: "post", url: e, data: t, dataType: "json", error: function (e) { T.find(".upload_c").data("load", "loaded"); editorTips(-1, e.message || "网络异常，请重试") }, success: function (l) { if (T.find(".upload_c").data("load", "loaded"), 200 == l.code) { T.find(".sensitive").fadeOut(); var o = g.find(".l_tome[tomeid='" + a + "']").find(".chapterlist").scrollTop() + 40; if (e == k) { 2 == t.publicMode ? ("add" == N ? editorTips(1, "草稿发布成功！") : editorTips(1, "保存草稿成功！"), f()) : (editorTips(1, "章节添加成功！"), (t.draftId > 1 || 3 == t.publicMode) && f(), s({ tomeId: t.tomeId, scrollTop: o })), O.val(""), A.val(""), W.val(""), E.val(""); var r = T.data("level"), d = T.data("submitmode"); return $("body").data({ chapter_name: "", chapter_content: "", chapter_say: "", chapter_summary: "", chapter_level: r, chapter_mode: d }), !1 } e == y ? (editorTips(1, "编辑章节保存成功！"), s({ tomeId: t.tomeId, moveChapterId: t.chapterId, scrollTop: o })) : 2 == t.publicMode ? (editorTips(1, "保存草稿成功！"), f()) : (editorTips(1, "草稿发布成功！"), f(), s({ tomeId: t.tomeId, scrollTop: o })); var n = t.summary || "", c = t.authorWords || "", r = T.data("level"), d = T.data("submitmode"); $("body").data({ chapter_name: t.chapterName, chapter_content: i, chapter_say: c, chapter_summary: n, chapter_level: r, chapter_mode: d }) } else if (501 == l.code) { for (var m = "", p = 0, h = (u = l.result).length; p < h; p++)m += "<em>" + u[p] + "</em>"; v = '<p><em class="pub_ico ico_err"></em>您输入的内容中包含违禁词: <span class="strong">' + m + "</span></p>"; T.find(".sensitive").show().find(".senspad").html(v), $(window).scrollTop(0) } else if (502 == l.code) { for (var u = l.result, m = "", p = 0, h = u.length; p < h; p++)m += "<em>" + u[p] + "</em>"; var v = '<p><em class="pub_ico ico_err"></em>您输入的内容包含如下不支持字符: <span class="strong">' + m + "</span></p>"; T.find(".sensitive").show().find(".senspad").html(v), $(window).scrollTop(0) } else editorTips(-1, l.message || "出错啦，请您重试！") } }) } if (T.data("level") < 0) return publicDialog("发布提示", "已下架作品不能发表VIP章节", 0), !1; var a = T.data("tomeid"), l = (T.data("chapterid"), $.trim(O.val())), o = function (e) { return e.replace(V, "").replace(S, "") }(A.val()), i = $.trim(o), r = $.trim(W.val()), n = h(), c = o.replace(/\n|\r/g, "</p><p>"); if (console.log(i), "" == l || "" == i || l.length > 20 || n.length > 5e4 || c.length > 1e5) return "" == l ? (editorTips(-1, "章节名不能为空！"), O.focus()) : "" == i ? (editorTips(-1, "章节内容不能为空！"), A.focus()) : l.length > 20 ? (editorTips(-1, "章节名超过限制长度20字！"), O.focus()) : n.length > 5e4 ? (editorTips(-1, "章节内容不能超过50000字！"), A.focus()) : c.length > 1e5 && (editorTips(-1, "章节内容中出现了太多无效字符！"), A.focus()), $(window).scrollTop(0), !1; if (M.test(l)) return M.lastIndex = 0, editorTips(-1, "章节名格式不正确！"), !1; if (M.test(o)) return M.lastIndex = 0, editorTips(-1, "章节内容格式不正确！"), !1; var m = $("body").data("chapter_mode"), p = $("body").data("chapter_level"); if (d() && m == T.data("submitmode") && p == T.data("level")) { N = e.attr("submit"); if ("draft" == N) editorTips(1, "草稿保存成功！"); else if ("editor" == N) editorTips(1, "章节保存成功！"); else if (2 == T.data("submitmode")) { editorTips(1, "草稿保存成功"), O.val(""), A.val(""), W.val(""), E.val(""), T.data("draftid", 0); var u = T.data("level"), v = T.data("submitmode"); $("body").data({ chapter_name: "", chapter_content: "", chapter_say: "", chapter_summary: "", chapter_level: u, chapter_mode: v }) } else editorTips(1, "章节保存成功！"); return T.find(".upload_c").data("load", "loaded"), !1 } o = o.replace(/\n|\r/g, "</p><p>"); var b = { bookId: _, tomeId: a, chapterName: l, content: "<p>" + o + "</p>", authorWords: r }; if (w) { var I = $.trim(E.val()); if (I > 20) return editorTips(-1, "章节摘要不能超过20字！"), E.focus(), !1; b.summary = I } var N, k = "/book/chapter/addsubmit", y = "/book/chapter/editsubmit"; if ("editor" == (N = e.attr("submit"))) { var x = T.data("chapterid"); b.chapterId = x, t(y, b) } else { var C = T.data("level"); b.level = C; var D = T.data("submitmode"); if (3 == D) { if ("" == (L = $.trim(T.find(".laydate-icon").val()))) return editorTips(-1, "定时发布时间不能为空！"), !1; var L = L.substr(0, 16) + ":00", q = (new Date).getTime(); if (L < q) return editorTips(-1, "定时发布时间不能早于当前时间！"), !1; b.releaseTime = L } if (b.publicMode = D, "add" == N) { var Y = T.data("draftid"); Y > 1 ? (b.draftId = Y, t(k, b)) : t(k, b) } else b.draftId = j, t("/book/draft/editsubmit", b) } }(e) }) } else { g.html('<div class="errorhtml">加载数据出错，请您刷新重试<br>连续多次依然不成功请联系客服人员</div>') } e() } }) } function r(e) { var t = e.parent(".l_tome"); if (!x) { var a = T.find(".upload_c"); t.attr("tomeid") != T.data("tomeid") ? "editor" != a && n(e) : "add" != a && n(e) } var l = t.find(".art_con").height() + 40; "open" == t.data("click") ? (t.find(".add_chapter").hide(), t.removeClass("bnone").stop().animate({ height: "38px" }, function () { t.siblings(".l_tome").show(), g.find(".creat_tome").show(), g.find(".tomelist").css("overflow", "auto") }).data("click", "close").siblings(".l_tome").data("click", "close")) : (g.find(".tomelist").css("overflow", "hidden"), t.find(".add_chapter").show(), g.find(".creat_tome").hide(), g.find(".addli").hide(), t.addClass("bnone").stop().animate({ height: l }).data("click", "open").siblings(".l_tome").hide().css("height", "38px").data("click", "close")) } function d() { var e = $.trim($("body").data("chapter_name")), t = $.trim($("body").data("chapter_content")), a = $.trim($("body").data("chapter_say")), l = $.trim($("body").data("chapter_summary")), o = $.trim(O.val()), i = $.trim(A.val()), r = $.trim(W.val()), d = $.trim(E.val()); return o == e && i == t && r == a && d == l || "" == o && "" == i && "" == r && "" == d } function s(t) { var a = (new Date).getTime(); $.ajax({ type: "post", url: Y, data: { bookId: _, t: a }, dataType: "json", error: function (e) { editorTips(-1, e.message || "网络异常，请重试") }, success: function (a) { if (null == a || "" == a) return !1; if (200 == a.code) { null != t.tomeId && "" != t.tomeId && T.data("tomeid", t.tomeId); var l = [], o = a.result; P = a.result; var i = []; if ("" == o) return !1; for (var d = '<div class="tomelist"><ul>', s = "", n = 0, m = o.length; n < m; n++) { var p = o[n].chapterList, f = p.length, h = o[n].tomeName.replace(/\</g, "&lt;").replace(/\>/g, "&gt"), u = o[n].level; if (i.push(o[n].tomeId), s += 2 == u ? '<li tomeId="' + o[n].tomeId + '" tomeNo="' + o[n].tomeNo + '" tomeLevel="' + o[n].level + '"><a href="javascript:;"><em class="pub_ico vip"></em> ' + h + "</a></li>" : '<li tomeId="' + o[n].tomeId + '" tomeNo="' + o[n].tomeNo + '" tomeLevel="' + o[n].level + '"><a href="javascript:;">' + h + "</a></li>", d += 3 == u ? '<li class="l_tome mix_tome" tomeId="' + o[n].tomeId + '" tomeNo="' + o[n].tomeNo + '" tomeLevel="' + o[n].level + '">' : '<li class="l_tome" tomeId="' + o[n].tomeId + '" tomeNo="' + o[n].tomeNo + '" tomeLevel="' + o[n].level + '">', 100 == o[n].tomeNo ? d += '<p class="art_tit"><em class="l_name">' + h + "</em></p>" : d += 2 == u ? '<p class="art_tit"><em class="l_name">' + h + '</em><em class="pub_ico vip"></em><span class="mod_ps"><em title="修改卷名" class="modname pub_ico"></em></span></p>' : '<p class="art_tit"><em class="l_name">' + h + '</em><span class="mod_ps"><em title="修改卷名" class="modname pub_ico"></em></span></p>', d += '<div class="chapterlist"><ul class="art_con">', f > 0) for (var v = 0; v < f; v++) { var _ = p[v].chapterName.replace(/\</g, "&lt;").replace(/\>/g, "&gt"); 1 == p[v].level ? d += '<li class="l_chapter" chapterId="' + p[v].chapterId + '" title="' + _ + '" orderNum="' + p[v].orderNum + '" level="' + p[v].level + '"><em class="pub_ico vip"></em><em class="l_name">' + _ + '</em><div class="mod_ps"><em title="修改章节名" class="modname pub_ico"></em><em class="modrank pub_ico" title="修改顺序"></em></div></li>' : d += '<li class="l_chapter" chapterId="' + p[v].chapterId + '" title="' + _ + '" orderNum="' + p[v].orderNum + '" level="' + p[v].level + '"><em class="l_name">' + _ + '</em><div class="mod_ps"><em title="修改章节名" class="modname pub_ico"></em><em class="modrank pub_ico" title="修改顺序"></em></div></li>'; var b = { tomeId: o[n].tomeId, chapterId: p[v].chapterId }; l.push(b) } d += '<li class="add_chapter"></li></ul></div>', d += "</li>" } if (d += '<li class="addli"><div class="add_tome"><input class="au_input addtome" maxlength="20" placeholder="请输入分卷名" type="text"><p class="adderror"><em class="ico_err pub_ico"></em><em class="error_con">错误信息</em></p><div class="btns"><span class="btn_bg btn_sure">保存</span><span class="btn_fg btn_cancel">取消</span></div></div></li>', d += "</ul></div>", d += '<p class="creat_tome"></p>', g.html(d), T.find(".choicetome").html(s), e(), null != t.scrollTop) if ("end" == t.scrollps) { var I = g.find(".tomelist"), N = g.find(".addli").offset().top - I.height(); N = Math.abs(N), I.scrollTop(N) } else g.find(".l_tome[tomeId='" + t.tomeId + "']").find(".chapterlist").scrollTop(t.scrollTop); T.data("tomeid"), T.data("chapterid"); if (null != t.tomeId) { var k = t.tomeId, y = t.moveChapterId, w = l.length; if (w > 0) { var $ = g.find(".l_tome[tomeId='" + k + "']"); if (null != y) $.data("click", "open"), c(g.find(".l_chapter[chapterid='" + y + "']")); else { $.data("click", "close"); r($.find(".art_tit")) } } } } else editorTips(-1, a.message) } }) } function n(e) { var t = e.parents(".l_tome").attr("tomeid"); T.data({ tomeid: t, chapterid: "-1", draftid: 0 }), m(), g.find(".l_chapter").removeClass("hover") } function c(e) { var t = e.parents(".l_tome"); if (t.find(".fixedtit").show(), t.addClass("bnone").css("height", "auto").siblings(".l_tome").hide(), e.hasClass("hover")) return !1; var a = e.attr("chapterId"); N.find(".l_chapter").removeClass("hover"), e.addClass("hover").find(".mod_ps").hide(); var l = t.attr("tomeid"); T.data({ tomeid: l, chapterid: a, draftid: 0 }), m(), g.find(".creat_tome").hide(), g.find(".add_chapter").show() } function m() { T.find(".sensitive").fadeOut(), N.find(".a_draft").removeClass("hover"), T.find(".value_error").hide(), clearInterval(q), O.val(""), A.val(""), W.val(""), E.val(""); var e = T.data("tomeid"), t = T.data("chapterid"), a = (new Date).getTime(); 4 != C ? k.show().find(".label").eq(2).addClass("not-allowed") : k.show().find(".label").eq(2).removeClass("not-allowed"), t > 0 ? $.ajax({ type: "post", url: z, data: { bookId: _, chapterId: t, t: a }, dataType: "json", error: function (e) { editorTips(-1, e.message || "网络异常，请重试") }, success: function (e) { if (null == e || "" == e) return !1; if (200 == e.code) { var t = e.result; if ("" != t && void 0 != t) { var a = t.chapterName, l = t.content, o = t.authorWords || "", i = t.tomeName.replace(/\</g, "&lt;").replace(/\>/g, "&gt"), r = t.summary; null != r && (E.val(r), T.find(".book_summary").html("<h2>章节摘要</h2><p>" + r + "</p>")), x ? (T.find(".book_tome").html(i), T.find(".book_chapter").html(a), T.find(".book_content").html(l), null != o && "" != o && T.find(".book_authorsay").html("<h2>作者有话说</h2><p>" + o + "</p>"), T.find(".bookend").show().siblings(".coding").hide(), T.show()) : (l = (l = l.replace(/<p>/g, "")).replace(/<\/p>|<br>|<br\/>/g, "\n"), O.val(a), A.val(l), W.val(o), T.find(".noselect").find(".sel_con").html(i), T.find(".select1").eq(0).hide().siblings(".select1").show(), k.hide(), y.hide(), T.find(".upload_c").attr("submit", "editor"), u(), T.find(".coding").show().siblings(".bookend").hide(), T.show()); var d = r || "", s = T.data("level"), n = T.data("submitmode"); $("body").data({ chapter_name: a, chapter_content: l, chapter_say: o, chapter_summary: d, chapter_level: s, chapter_mode: n }) } } else editorTips(-1, e.message) } }) : (O.val(""), A.val(""), W.val(""), E.val(""), p(e)), $(window).scrollTop(0) } function p(e) { clearInterval(q), $.ajax({ type: "post", url: "/book/chapter/checklevel", data: { bookId: _, tomeId: e }, dataType: "json", error: function (e) { editorTips(-1, e.message || "网络异常，请重试") }, success: function (t) { if (200 == t.code) { q = setInterval(v, L); var a = T.data("draftid"), l = t.result; if (4 != C ? k.show().find(".label").eq(2).addClass("not-allowed") : k.show().find(".label").eq(2).removeClass("not-allowed"), -1 == l) y.show().find(".label").eq(0).attr("class", "label focus not-allowed").siblings(".label").attr("class", "label not-allowed"), T.data({ submitmode: -1, level: -1 }), k.show().find(".label").addClass("not-allowed"); else if (2 == l) if (k.show().find(".label").removeClass("not-allowed"), y.show().find(".label").eq(0).attr("class", "label focus").siblings(".label").attr("class", "label"), a < 1) T.data({ submitmode: 1, level: 1 }), k.find(".label").eq(1).addClass("focus").siblings().removeClass("focus"); else { T.data({ level: B }); var o = 1 - B; y.find(".label").eq(o).addClass("focus").siblings().removeClass("focus") } else 1 == l ? (k.show().find(".label").removeClass("not-allowed"), T.data("level", 1), a < 1 && T.data("submitmode", 1)) : (T.data("level", 0), a < 1 && T.data("submitmode", 1)), y.show().find(".label").eq(l).addClass("not-allowed").removeClass("focus").siblings(".label").addClass("focus").removeClass("not-allowed"), a < 1 && k.find(".label").eq(1).addClass("focus").siblings().removeClass("focus"); a < 1 ? T.find(".upload_c").attr("submit", "add") : T.data({ submitmode: 2 }), T.find(".select1").eq(0).show().siblings(".select1").hide(); var i = T.find(".choicetome").find("li[tomeid='" + e + "']").children("a").html(); T.find(".select_dom").find(".sel_con").html(i), u(), T.show() } else editorTips(-1, t.message || "出错啦，请您重试！") } }) } function f() { var t = (new Date).getTime(); $.ajax({ type: "post", url: "/book/draft/count", data: { bookId: _, t: t }, dataType: "json", error: function () { }, success: function (t) { if (null == t || "" == t) return !1; if (200 == t.code) if (t.result > 0) { var a = '<h2 class="dreftnum"><div class="a_draft"><em class="cgx">存稿箱</em><em class="pub_ico radius">' + t.result + "</em></div></h2>"; N.find(".side_tit").find(".radius").size() > 0 ? N.find(".side_tit").find(".radius").html(t.result) : (N.find(".booktome").before(a), e()), N.find(".a_draft").click(function () { d() ? location.href = "/book/draft/show?bookId=" + _ : publicDialog("操作提醒", "您有修改过的内容暂未保存，确定要进行别的操作吗？", 1, function () { location.href = "/book/draft/show?bookId=" + _ }) }) } else N.find(".dreftnum").size() > 0 && (N.find(".dreftnum").remove(), e()) } }) } function h() { var e = G.val(); return e = e.replace(/<[^>]+>/g, ""), e = e.replace(/[\f\v\t\r\n]/g, ""), e = e.replace(/[ ]/g, ""), e = e.replace(/[　]/g, "") } function u() { var e = h().length; e > 5e4 && (e = "您已超出" + Math.abs(e - 5e4) + "字"); F.find(".setfont").find("em").html(e) } function v() { function t(e, t) { null != t && "" != t || (t = "自动保存失败！"); 200 == e ? editorTips(1, t) : editorTips(-1, t) } if (d()) return !1; var a = T.data("tomeid"), l = T.data("draftid"), o = T.data("level"), i = $.trim(T.find(".chapter_name").val()), r = T.find(".chapter_content").val(), s = $.trim(T.find(".write").val()), n = $.trim(E.val()); if ("" == i || "" == $.trim(r)) return !1; if (r = "<p>" + r + "</p>", l < 1 && (r.length < 10 || n.length > 50)) return !1; var c = { bookId: _, tomeId: a, level: o, chapterName: i, content: r, authorWords: s }; l > 1 && (c.draftId = l), w && (c.summary = n), T.find(".sensitive").hide(), $.ajax({ type: "post", url: "/book/draft/autosave", data: c, dataType: "json", error: function (e) { t(-1, e.message || "网络异常，请重试") }, success: function (a) { if (null == a || "" == a) return !1; if (200 == a.code) { T.find(".sensitive").fadeOut(), f(), e(); var l = $.trim(O.val()), o = $.trim(A.val()), i = $.trim(W.val()), r = $.trim(E.val()), d = T.data("level"); $("body").data({ chapter_name: l, chapter_content: o, chapter_say: i, chapter_summary: r, chapter_level: d, chapter_mode: 2 }), t(a.code, a.message), T.data("draftid", a.result) } else if (501 == a.code) { for (var s = "", n = 0, c = (m = a.result).length; n < c; n++)s += "<em>" + m[n] + "</em>"; p = '<p><em class="pub_ico ico_err"></em>您输入的内容中包含违禁词: <span class="strong">' + s + "</span></p>"; T.find(".sensitive").show().find(".senspad").html(p), $(window).scrollTop(0) } else if (502 == a.code) { for (var m = a.result, s = "", n = 0, c = m.length; n < c; n++)s += "<em>" + m[n] + "</em>"; var p = '<p><em class="pub_ico ico_err"></em>您输入的内容中包含emoji表情: <span class="strong">' + s + "</span></p>"; T.find(".sensitive").show().find(".senspad").html(p), $(window).scrollTop(0) } else t(a.code, a.message) } }) } var _ = $("body").attr("bookid"), g = $("#artList"), b = $("#listerr"), I = $("#listerrbg"), N = b.siblings(".side"), T = b.siblings(".wide"), k = T.find(".submit_style"), y = T.find(".submit_model"), w = 1 == $("body").attr("isfemale"), x = 1 == $("body").attr("serialStatus"), C = $("body").attr("authorization"), j = $("body").attr("draftid"), D = $("#publicDialog"), L = ($("#publicDialogbg"), 3e5), q = null; w ? (T.find(".remark").show(), T.find(".book_summary").show()) : (T.find(".remark").hide(), T.find(".book_summary").hide()); var M = /<\/?[^>]*>/g; window.onresize = function () { e() }, Array.prototype.backIndex = function (e, t) { if (this.length < 1) return !1; for (var a = 0; a < this.length; a++)if (this[a][e] == t) { return a + 1 } }, Array.prototype.countArry = function (e, t) { if (this.length < 1) return !1; for (var a = 0, l = 0; l < this.length; l++)this[l][e] == t && a++; return a }, D.find(".volume").find(".option").on("click", ".l_tome", function () { var e = $(this); D.attr("level"); l(e.attr("tomeid")) }), D.find(".select_nav").unbind("click"), D.find(".select_dom").click(function () { var e = $(this), t = e.find(".option"); return !(e.find(".not_select").size() > 0) && (!(t.find("li").length < 2) && (t.is(":visible") ? D.find(".option").hide() : (D.find(".option").hide(), t.show()), !1)) }), D.find(".volume").find(".select_nav").click(function () { setDialogps() }); var Y = "/book/chapter/list", z = "/book/chapter/edit", O = T.find(".chapter_name"), A = T.find(".chapter_content"), W = T.find(".write"), E = T.find(".summary"), P = []; T.find(".choicetome").on("click", "li", function () { var e = $(this).attr("tomeid"); T.data("tomeid", e), p(e) }), g.on("click mouseover mouseout", ".art_tit", function (e) { var t = $(this); "click" == e.type ? d() ? r(t) : publicDialog("操作提醒", "您有修改过的内容暂未保存，确定要进行别的操作吗？", 1, function () { r(t) }) : "mouseover" == e.type ? t.find(".mod_ps").show() : t.find(".mod_ps").hide() }).on("click mouseover mouseout", ".l_chapter", function (e) { var t = $(this), a = t.parents(".l_tome"), l = t.index(); if ("click" == e.type) { if (t.hasClass("hover")) return !1; d() ? c(t) : publicDialog("操作提醒", "您有修改过的内容暂未保存，确定要进行别的操作吗？", 1, function () { c(t) }) } else "mouseover" == e.type ? t.hasClass("hover") ? t.find(".mod_ps").show().find(".modname").hide() : (l > 0 && a.find(".l_chapter").eq(l - 1).addClass("maxli"), t.find(".mod_ps").show()) : (a.find(".l_chapter").removeClass("maxli"), t.find(".mod_ps").hide().find(".modname").show()) }).on("click", ".modname", function () { var e = $(this); return function (e, t) { var a, l, i, r = -1, c = "删除本卷", m = null, p = !0; if (e.parents(".l_chapter").size() > 0 ? (r = 1, c = "删除本章", m = e.parents(".l_chapter"), a = e.parents(".l_tome").attr("tomeid"), l = m.attr("chapterid")) : (r = -1, c = "删除本卷", m = e.parents(".l_tome"), a = m.attr("tomeid"), p = parseInt(m.attr("tomelevel")) > 0, i = m.attr("tomeno")), p && -1 == r || 100 == i || 200 == i || 1 == e.parents(".l_chapter").attr("level") ? b.find(".err_del").addClass("not_del") : b.find(".err_del").removeClass("not_del"), "not" == e.data("status")) return !1; var f = m.offset().top, h = $(window).height(), u = $("body").height(), v = u < h ? h : u, k = N.height(); f > k && (f = k - 10), b.find(".errcopy").val(t), b.find(".err_del").text(c), b.css({ top: f }).fadeIn(), I.height(v).fadeIn(), b.find(".err_save").unbind("click").click(function () { function t() { e.data("status", "not"), 1 == r ? $.ajax({ type: "post", url: "/book/chapter/update", data: { bookId: _, chapterId: l, chapterName: i }, dataType: "json", error: function (t) { e.data("status", "can"), editorTips(-1, t.message || "网络异常，请重试") }, success: function (t) { if (e.data("status", "can"), null == t) return !1; if (200 == t.code) { m.attr("title", i).find(".l_name").text(i), o(); var l = g.find(".l_tome[tomeid='" + a + "']").find(".chapterlist").scrollTop(); editorTips(1, "恭喜您章节名修改成功！"), s({ tomeId: a, scrollTop: l }) } else editorTips(-1, t.message) } }) : $.ajax({ type: "post", url: "/book/tome/update", data: { bookId: _, tomeId: a, tomeName: i }, dataType: "json", error: function (t) { e.data("status", "can"), editorTips(-1, t.message || "网络异常，请重试") }, success: function (t) { if (e.data("status", "can"), null == t) return !1; if (200 == t.code) { m.find(".l_name").text(i), o(); var a = g.scrollTop(); editorTips(1, "恭喜您卷名修改成功！"), s({ scrollTop: a }) } else editorTips(-1, t.message) } }) } var i = $.trim(b.find(".errcopy").val()); return "" == i ? (1 == r ? editorTips(-1, "章节名不能为空！") : editorTips(-1, "卷名不能为空！"), !1) : M.test(i) ? (editorTips(-1, "格式有误！"), !1) : i.length > 20 ? (editorTips(-1, "文字长度超过限制的20字！"), !1) : void (d() ? t() : publicDialog("操作提醒", "您有修改过的内容暂未保存，确定要进行别的操作吗？", 1, function () { t() })) }).siblings(".err_cancel").unbind("click").click(function () { e.data("status", "can"), o() }).siblings(".err_del").unbind("click").click(function () { if ($(this).hasClass("not_del")) return !1; r > 0 || r < 0 && !p ? r > 0 ? publicDialog("删除章节", "章节删除后将无法恢复，确定删除？", 1, function () { $.ajax({ type: "post", url: "/book/chapter/delete", data: { bookId: _, chapterId: l }, dataType: "json", error: function (t) { e.data("status", "can"), editorTips(-1, t.message || "网络异常，请重试") }, success: function (t) { if (e.data("status", "can"), null == t) return !1; if (200 == t.code) { o(), m.remove(), editorTips(1, "恭喜您章节删除成功！"); var l = g.scrollTop(); s({ tomeId: a, scrollTop: l }) } else editorTips(-1, t.message) } }) }) : publicDialog("删除分卷", "分卷删除后将无法恢复，确定删除？", 1, function () { return $.ajax({ type: "post", url: "/book/tome/delete", data: { bookId: _, tomeId: a }, dataType: "json", error: function (t) { e.data("status", "can"), editorTips(-1, t.message || "网络异常，请重试") }, success: function (t) { if (e.data("status", "can"), null == t) return !1; 200 == t.code ? (m.remove(), o(), editorTips(1, "恭喜您分卷删除成功！"), s({ scrollTop: g.scrollTop() }), a == T.data("tomeid") && n(g.find(".l_tome:last").find(".art_tit"))) : editorTips(-1, t.message) } }), !1 }) : (e.data("status", "can"), editorTips(-1, "非空卷和VIP章节不能删除")) }) }(e, e.parent().siblings(".l_name").text()), !1 }).on("click", ".modrank", function () { var e = $(this); e.parents(".mod_ps").addClass("movethis"); var t = e.parents(".l_tome").attr("tomeid"), l = e.parents(".l_chapter"), o = l.attr("level"), i = l.attr("chapterid"); return setTimeout(function () { l.hasClass("hover") && l.find(".modname").hide(), e.parents(".mod_ps").fadeIn() }, 200), a(o, t, i), !1 }).on("click", ".add_chapter", function () { n($(this)) }).on("click", ".creat_tome", function () { g.find(".addli").show().animate({ height: "124px" }, 500); var e = g.find(".addli").offset().top; e - g.find(".tomelist").height() > 0 && g.find(".tomelist").scrollTop(e), g.find(".addtome").focus() }).on("click", ".btn_sure", function () { var e = $(this); if ("not" != e.data("can")) { var t = g.find(".addtome"), a = $.trim(t.val()); if (!function (e) { var t = !1, a = g.scrollTop(), l = g.find(".addli"), o = l.height(); return "" == e ? (o < 148 && (l.animate({ height: "148px" }, 500), g.scrollTop(a + 42)), g.find(".adderror").show().find(".error_con").html("请输入卷名"), g.find(".addtome").focus()) : e.length > 20 ? (o < 148 && (l.animate({ height: "148px" }, 500), g.scrollTop(a + 24)), g.find(".adderror").show().find(".error_con").html("卷名超过了限制长度"), g.find(".addtome").focus()) : M.test(e) ? (M.lastIndex = 0, o < 148 && (l.animate({ height: "148px" }, 500), g.scrollTop(a + 24)), g.find(".adderror").show().find(".error_con").html("卷名格式不正确"), g.find(".addtome").focus()) : (g.find(".adderror").hide(), g.find(".addli").animate({ height: "124px" }, 500), t = !0), t }(a)) return !1; e.data("can", "not"), $.ajax({ type: "post", url: "/book/tome/addsubmit", data: { bookId: _, tomeName: a }, dataType: "json", error: function (t) { e.data("can", "can"); editorTips(-1, t.message || "网络异常，请重试") }, success: function (t) { if (e.data("can", "can"), null == t || "" == t) return !1; if (200 == t.code) { s({ scrollps: "end", scrollTop: g.scrollTop() }), editorTips(1, t.message) } else editorTips(-1, t.message) } }) } }).on("click", ".btn_cancel", function () { g.find(".addli").hide().find(".addtome").val("").siblings(".adderror").hide() }), $(".bookstore").attr("href", "javascript:;").click(function () { d() ? location.href = "http://" + location.hostname : publicDialog("操作提醒", "您有修改过的内容暂未保存，确定要进行别的操作吗？", 1, function () { location.href = "http://" + location.hostname }) }), T.find(".label").click(function () { var e = $(this); if (e.hasClass("not-allowed")) return !1; var t = e.attr("mode"); null != t ? (3 == t && T.find(".publish_t_v").val(""), T.data("submitmode", t)) : T.data("level", e.attr("level")) }), f(), i(), O.blur(function () { !function (e) { var t = e.val(), a = ""; "" == t ? a = "请输入章节名" : t.length > 20 ? a = "章节名超过限定的长度，请重新输入" : M.test(t) ? (a = "您输入的格式不对", M.lastIndex = 0) : e.parents(".w_con").find(".value_error").fadeOut(), "" != a && e.parents(".w_con").find(".value_error").fadeIn().find(".error_con").text(a) }($(this)) }); var R = " ᠎           ‬‭  　\u2028\u2029\ufeff"; R = "[" + R + "]"; var V = new RegExp("^" + R + R + "*"), S = new RegExp(R + R + "*$"), B = 0; T.find(".wide_arr").click(function () { var e = $(this); e.hasClass("focus") ? (e.removeClass("focus"), N.css("visibility", "visible"), T.animate({ marginLeft: "327px" }, 500)) : (e.addClass("focus"), T.animate({ marginLeft: 0 }, 500, function () { N.css("visibility", "hidden") })) }); var F = T.find(".textarea"), G = F.find(".des"); G.click(function () { var e = $(this); $.trim(e.val()) == e.attr("placeholder") && e.val("") }).keyup(function () { u() }), u(); T.find(".authorsay").find(".arr_drop").click(function () { var e = $(this); e.hasClass("dropout") ? (e.removeClass("dropout"), e.parent().siblings(".toread").hide()) : (e.addClass("dropout"), e.parent().siblings(".toread").show()) }), T.find(".publish_t_v").click(function () { return laydate({ istime: !0, istoday: !1, format: "YYYY-MM-DD hh:mm:ss", min: laydate.now(void 0, "YYYY-MM-DD hh:mm:ss"), choose: function (e) { !function (e) { var t = T.data("tomeid"); $.ajax({ type: "post", url: "/book/draft/checkretime", data: { bookId: _, tomeId: t, releaseTime: e }, dataType: "json", error: function (e) { editorTips(-1, e.message || "网络异常，请重试") }, success: function (e) { if (null == e || "" == e) return !1; 200 == e.code || (editorTips(-1, e.message), T.find(".laydate-icon").val("")) } }) }(e) } }), !1 }), T.find(".publish_t").click(function () { return !1 }) });